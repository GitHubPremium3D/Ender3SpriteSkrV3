# Please see the github below for more info about this setup.
# https://github.com/GitHubPremium3D

# Date Published
# 5.18.24

# [Setup Information] #
# Pi 3B plus
# raspberry pi imager with Klipper mainsail OS
# SKR MINI E3V3
# Plain Ender 3
# Sprite Extruder
# Dual Z to single cable
# GulfCoast Robotics linear Y axix
# GulfCoast Robotics upgraded bed and heater
# WobbleX

# Things Still to add #
# Show/Cancel Print
# Filament runout sensor
# Input Shaping
# Tuning 

######################################################################
# Include Section
######################################################################
[include mainsail.cfg]
[include kamp_settings.cfg]
[include line_purge.cfg]
[include adaptive_meshing.cfg]
[include test_speed.cfg]
[include smart_park.cfg]
######################################################################
#MCU
######################################################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2B002B001950425937353020-if00
baud: 250000
restart_method: command
[temperature_sensor SKR_E3V3]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 90
##############################################################
#[mcu rpi]
#serial: /tmp/klipper_host_mcu
[temperature_sensor raspberry_pi_3B]
sensor_type: temperature_host
min_temp: 10
max_temp: 90
######################################################################
#Printer Info
######################################################################
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000
max_z_velocity: 5
max_z_accel: 100
##############################################################
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>
##############################################################
#[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
#timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.
######################################################################
#Cooling
######################################################################
# Fan1 is Cooling Extruder Heatbreak
[heater_fan controller_fan]
pin: PC7
#heater: heater_bed
#heater_temp: 45.0
##############################################################
# Fan0 is Cooling Filament
[heater_fan nozzle_cooling_fan]
pin: PC6
##############################################################
# Fan2 is Cooling Board
[fan]
pin: PB15
######################################################################
#[fan]
#pin:
#   Output pin controlling the fan. This parameter must be provided.
#max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
#shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
#cycle_time: 0.010
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. Most fans
#   do not work well with hardware PWM, so it is not recommended to
#   enable this unless there is an electrical requirement to switch at
#   very high speeds. When using hardware PWM the actual cycle time is
#   constrained by the implementation and may be significantly
#   different than the requested cycle_time. The default is False.
#kick_start_time: 0.100
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.
#off_below: 0.0
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.
#
#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.
#tachometer_pin:
#   Tachometer input pin for monitoring fan speed. A pullup is generally
#   required. This parameter is optional.
#tachometer_ppr: 2
#   When tachometer_pin is specified, this is the number of pulses per
#   revolution of the tachometer signal. For a BLDC fan this is
#   normally half the number of poles. The default is 2.
#tachometer_poll_interval: 0.0015
#   When tachometer_pin is specified, this is the polling period of the
#   tachometer pin, in seconds. The default is 0.0015, which is fast
#   enough for fans below 10000 RPM at 2 PPR. This must be smaller than
#   30/(tachometer_ppr*rpm), with some margin, where rpm is the
#   maximum speed (in RPM) of the fan.
#enable_pin:
#   Optional pin to enable power to the fan. This can be useful for fans
#   with dedicated PWM inputs. Some of these fans stay on even at 0% PWM
#   input. In such a case, the PWM pin can be used normally, and e.g. a
#   ground-switched FET(standard fan pin) can be used to control power to
#   the fan.
##############################################################
#[heater_fan heatbreak_cooling_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
#heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0
##############################################################
#[controller_fan my_controller_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

######################################################################
#2209 Stepper Motors
######################################################################
[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_min:-10
position_max: 220
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999
##############################################################
[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_min: -10
position_max: 230
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999
##############################################################
[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -6

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999
##############################################################
## Enable if dual z has individual drivers.
#[stepper_z1]
#step_pin:
#dir_pin:
#enable_pin:
#microsteps:
#rotation_distance:
#   See the "stepper" section for the definition of the above parameters.
#endstop_pin:
#   If an endstop_pin is defined for the additional stepper then the
#   stepper will home until the endstop is triggered. Otherwise, the
#   stepper will home until the endstop on the primary stepper for the
#   axis is triggered.
######################################################################
#Sprite Extruder ALL METAL 300 C
######################################################################
[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 25.35914
full_steps_per_rotation: 200
gear_ratio: 42:12
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 5
instantaneous_corner_velocity: 1.000
max_extrude_only_distance: 100
#max_extrude_only_velocity:
#max_extrude_only_accel:
pressure_advance: 0.08
pressure_advance_smooth_time: 0.04
#Extruder Heater Section
heater_pin: PC8
#max_power: 1.0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#pullup_resistor: 4700
#smooth_time: 1.0
control: pid
pid_kp = 20.057
pid_ki = 1.311
pid_kd = 76.716
#max_delta: 2.0
#pwm_cycle_time: 0.100
#pwm_cycle_time: 0.100
min_temp: 10
max_temp: 300

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999
##############################################################
[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_kp = 63.001
pid_ki = 1.235
pid_kd = 803.259
min_temp: 10
max_temp: 110
######################################################################
#BL Touch requirements
######################################################################
[bltouch]
##https://www.klipper3d.org/Probe_Calibrate.html
sensor_pin: ^PC14
control_pin: PA1
pin_move_time: 0.680
stow_on_each_sample: False
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
set_output_mode: 5V
x_offset: -29
y_offset: -41
z_offset: 1.720
speed: 200
lift_speed: 20
samples: 3
sample_retract_dist: 4
samples_result: average
samples_tolerance: 0.01
samples_tolerance_retries: 5
##############################################################
#[probe_eddy_current my_eddy_probe]
#sensor_type: ldc1612
#   The sensor chip used to perform eddy current measurements. This
#   parameter must be provided and must be set to ldc1612.
#z_offset:
#   The nominal distance (in mm) between the nozzle and bed that a
#   probing attempt should stop at. This parameter must be provided.
#i2c_address:
#i2c_mcu:
#i2c_bus:
#i2c_software_scl_pin:
#i2c_software_sda_pin:
#i2c_speed:
#   The i2c settings for the sensor chip. See the "common I2C
#   settings" section for a description of the above parameters.
#x_offset:
#y_offset:
#speed:
#lift_speed:
#samples:
#sample_retract_dist:
#samples_result:
#samples_tolerance:
#samples_tolerance_retries:
#   See the "probe" section for information on these parameters.
##############################################################
[safe_z_home]
home_xy_position: 130,150 # Change coordinates to the center of your print bed
speed: 75
z_hop: 5                # Move up 10mm
z_hop_speed: 20
move_to_previous: False
##############################################################
[bed_mesh]
speed: 250
horizontal_move_z: 5
mesh_min: 1, 1
mesh_max: 191, 189
probe_count: 5,5
fade_start: 1
fade_end: 0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2, 2
algorithm: bicubic ##change from larange after 3x3 or more probe locations.
bicubic_tension: 0.2
zero_reference_position: 130,150
######################################################################
#  Manual Leveling
######################################################################
# Remove bed and find the location of each screw and enter below.
# No macro needed. You can find the option under the three dots on toolhead.
# To adjust just imagine a Clock similar to the image below.

#                        
#                        12  60 mins
#          55  mins  11      1  5 mins
#        50  mins  10          2  10 mins
#       45  mins  9      C      3  15 mins
#        40  mins  8           4  20 mins
#          35  mins  7       5  25 mins
#                        6  30 mins
#

[bed_screws]
screw1: 45, 62 # Using front left as baseline
screw1_name: front left screw
screw2: 45, 200
screw2_name: rear left screw
screw3: 200, 200
screw3_name: rear right screw
screw4: 200, 62
screw4_name: front right screw
screw5: 115, 115
screw5_name: Center
##############################################################
[screws_tilt_adjust]
screw1: 52, 62 # Using front left as baseline
screw1_name: front left screw
screw2: 52, 230
screw2_name: rear left screw
screw3: 220, 230
screw3_name: rear right screw
screw4: 220, 62
screw4_name: front right screw
screw5: 143, 156
screw5_name: Center
horizontal_move_z: 5
speed: 250
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise
######################################################################
#Macros
######################################################################
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: TURN_OFF_HEATERS
##############################################################
[respond]
default_type: echo
default_prefix: echo
##############################################################
[display_status]
[exclude_object]
[pause_resume]
recover_velocity: 25
##############################################################
[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 20
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
##############################################################
#[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.
##############################################################
#[input_shaper]
##https://www.klipper3d.org/G-Codes.html#input_shaper
#shaper_freq_x: 0
#   A frequency (in Hz) of the input shaper for X axis. This is
#   usually a resonance frequency of X axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for X axis.
#shaper_freq_y: 0
#   A frequency (in Hz) of the input shaper for Y axis. This is
#   usually a resonance frequency of Y axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei. The default
#   is mzv input shaper.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Default value is 0.1 which is a
#   good all-round value for most printers. In most circumstances this
#   parameter requires no tuning and should not be changed.
##############################################################
#[adxl345]
##input shaping
#cs_pin:
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#axes_map: x, y, z
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.
##############################################################
#[resonance_tester]
##https://www.klipper3d.org/Measuring_Resonances.html
##https://www.klipper3d.org/G-Codes.html#resonance_tester
##https://www.klipper3d.org/Measuring_Resonances.html#max-smoothing
#probe_points:
#   A list of X, Y, Z coordinates of points (one point per line) to test
#   resonances at. At least one point is required. Make sure that all
#   points with some safety margin in XY plane (~a few centimeters)
#   are reachable by the toolhead.
#accel_chip:
#   A name of the accelerometer chip to use for measurements. If
#   adxl345 chip was defined without an explicit name, this parameter
#   can simply reference it as "accel_chip: adxl345", otherwise an
#   explicit name must be supplied as well, e.g. "accel_chip: adxl345
#   my_chip_name". Either this, or the next two parameters must be
#   set.
#accel_chip_x:
#accel_chip_y:
#   Names of the accelerometer chips to use for measurements for each
#   of the axis. Can be useful, for instance, on bed slinger printer,
#   if two separate accelerometers are mounted on the bed (for Y axis)
#   and on the toolhead (for X axis). These parameters have the same
#   format as 'accel_chip' parameter. Only 'accel_chip' or these two
#   parameters must be provided.
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).
##############################################################
#Basic Filament Sensor
#[filament_switch_sensor filament_sensor]
#switch_pin: ^P1.24
#pause_on_runout: True
#insert_gcode:
    #M117 Insert Detected
#runout_gcode:
   #M117 Runout Detected
    #LCDRGB R=1 G=0 B=0  # Turn LCD red
    #BEEP I=12
##############################################################
#Smart filament sensor
#[filament_motion_sensor filament_sensor]
#detection_length: 10
#extruder: extruder
#switch_pin: ^P1.24
#pause_on_runout: True
#insert_gcode:
    #M117 Insert Detected
#runout_gcode:
    #M117 Runout Detected
    #LCDRGB R=1 G=0 B=0  # Turn LCD red
    #BEEP I=12
######################################################################
#Printing Macros
######################################################################
[gcode_macro START_PRINT]
gcode:
    G90                                 ; use Absolute Positioning
    G92 E0                              ; Reset Extruder
    M83                                 ; extruder relative mode
    M140 S[first_layer_bed_temperature] ; set final bed temp
    M104 S150                           ; set extruder temp for bed leveling
    G4 S10                              ; allow partial nozzle warmup
    G28                                 ; Home all axes
    BED_MESH_CLEAR                      ; clear mesh
    BED_MESH_CALIBRATE ADAPTIVE=1       ; adaptive meshing
    M104 S{EXTRUDER_TEMP}               ; Extruder temp
  	M109 S{EXTRUDER_TEMP}               ; Extruder wait till temp
    EXCLUDE_OBJECT_DEFINE               ; Exclude object
    BED_MESH_PROFILE LOAD=default       ; load default mesh
    #clean_nozzle                       ; nozzle cleaning macro
    LINE_PURGE                          ; KAMP Purge
    ##############################################################
#[gcode_macro CLEAN_NOZZLE]
#description: Clean Nozzle - Clean the nozzle
#gcode: 
    #SAVE_GCODE_STATE NAME=clean_nozzle
    #M117 Clean Nozzle
    #G90
    #G1 X230 Y10 F4000 # move 1. Pos
    #G1 X253 F4000 # move 2. Pos
    #G1 X220 F2000 # move 1. Pos
    #G1 X253 F2000 # move 2. Pos
    #G1 X220 F3000 # move 1. Pos
    #G1 X253 F3000 # move 2. Pos
    #1 X220 F5000 # move 1. Pos    
    #ESTORE_GCODE_STATE NAME=clean_nozzle
##############################################################
[gcode_macro END_PRINT]
description: Default Print Ende - Replace the slicer's custom start and end g-code scripts with END_PRINT
gcode:
    M117 
    smart_park
    G1 E-3 F1800  ; Retract a bit
    M104 S0       ; turn off Nozzle
    M140 S0       ; turn off bed
    M107          ; turn off fans
    M84 X Y E     ; Disable all steppers but Z
    BED_MESH_CLEAR

##############################################################
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SMART_PARK
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    BASE_CANCEL_PRINT
##############################################################
[gcode_macro M486]
description: Cancel object
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
######################################################################
#Mainsail Macros
######################################################################
[gcode_macro Nozzle_PID]
gcode:
	{% set TEMP = params.TEMP|default(235)|float %}
	PID_CALIBRATE HEATER=extruder TARGET={TEMP}
##############################################################
[gcode_macro BED_PID]
gcode:
    {% set TEMP = params.TEMP|default(70)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}
##############################################################
[gcode_macro Probe_Cal]
gcode:
    G28
    probe_calibrate
##############################################################
[gcode_macro Test_Probe]
gcode:
    G28
    probe_accuracy
##############################################################
[gcode_macro Touch_Down]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_down
##############################################################
[gcode_macro Touch_Up]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_up
##############################################################
[gcode_macro Touch_Reset]
gcode:
    BLTOUCH_DEBUG COMMAND=reset
##############################################################

##############################################################
##############################################################
##############################################################
